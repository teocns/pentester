from django.db import models
from django.contrib import admin
from django.core.validators import MaxValueValidator, MinValueValidator

from .manager import PortsManager






class TargetPort(models.Model):

    objects = PortsManager()
    
    class Meta:
        indexes = [
            models.Index(fields=['status',]),
        ]
        base_manager_name = 'objects'

    

    class Status(models.TextChoices):
        open = 'o', 'open'
        filtered = 'f', 'filtered'
        closed = 'c', 'closed'

    target = models.ForeignKey('Target', on_delete=models.CASCADE, related_name='_ports')

    number = models.PositiveSmallIntegerField(
        validators=[
            MaxValueValidator(65535)
        ]
    )

    status = models.CharField(
        max_length=1,
        choices=Status.choices,
        default=Status.closed
    )

    last_modified = models.DateTimeField(auto_now=True)

    def __str__(self) -> str:
        return f'{self.target.host}:{self.number}'





admin.site.register(TargetPort)




# from ..manager import ModelManager

#     """
#     A manager/wrapper to provide ports accessibility and functionalities
#     """

#     def __init__(self, django_ports_manager: ModelManager[TargetPort]) -> None:
#         self._ports = django_ports_manager

#     def __iter__():
#         pass


#     def __all__():
#         pass

#     def scan():
#         pass