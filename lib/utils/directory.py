import os

def tmp_dir():
    import tempfile
    return tempfile.mkdtemp()
    

def iter_package_modules(package_name):  
    import importlib    

    spec = importlib.util.find_spec(package_name)
    if spec is None:
        return set()

    pathname = Path(spec.origin).parent
    ret = set()
    with os.scandir(pathname) as entries:
        for entry in entries:
            if entry.name.startswith('__'):
                continue
            current = '.'.join((package_name, entry.name.partition('.')[0]))
            if entry.is_file():
                if entry.name.endswith(MODULE_EXTENSIONS):
                    ret.add(current)
            elif entry.is_dir():
                ret.add(current)
                ret |= package_contents(current)


    return ret


is_class_member = lambda member: inspect.isclass(member) and member.__module__ == __name__