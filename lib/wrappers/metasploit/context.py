from typing import Iterable
from .module import MsfModule

import logging

log = logging.getLogger(__name__)



class MsfContext(object):
    """
    # A context class that aims at facilitating running a series of attacks against a target.

    # Params:
    - RHOSTS
    - HOSTS

    # Usage:
    >>> with MetasploitContext("0.0.0.0", "8080") as context:
    >>>     context.run(module1, module2)

    """
    
    RHOSTS = []
    RPORTS = []

    def __init__(self, RHOSTS, RPORTS) -> None:
        self.RHOSTS = RHOSTS
        self.RPORTS = RPORTS

    
    def __enter__(self):
        return self

    def __exit__(self, exc_type, exc_value, traceback):
        pass
    

    def run(self, *args: Iterable[MsfModule]):
        """
        Runs an iterable of Metasploit modules against the context.
        """
        for module in args:

            try:
                module.run(
                    RHOSTS=self.RHOSTS,
                    RPORTS=self.RPORTS,
                )
            except Exception as ex:
                log.error('Run error for {module}'.format(module=module), exc_info=ex)
                

