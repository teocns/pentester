# from lib.pentester.scanners.cms import CMSScanner



# CMSScanner.run()

# {'web-servers': ['Apache'], 'font-scripts': ['Font Awesome', 'Google Font API'], 'cms': ['Joomla'], 'programming-languages': ['PHP'], 'web-frameworks': ['Twitter Bootstrap', 'UIKit'], 'javascript-frameworks': ['jQuery']}


from time import time
import urllib
import urllib.request

class UrllibPatchContextManager:
    def __init__(self, patch_dict):
        self.patch_dict = patch_dict
        self.original_dict = {}

    def __enter__(self):
        for key, value in self.patch_dict.items():
            self.original_dict[key] = getattr(urllib.request, key)
            setattr(urllib.request, key, value)

    def __exit__(self, exc_type, exc_val, exc_tb):
        for key, value in self.original_dict.items():
            setattr(urllib.request, key, value)


def test_threadsafe():
    with UrllibPatchContextManager({'urlopen': lambda *args, **kwargs: time()}):
        print(urllib.request.urlopen('http://www.google.com'))


import threading
threads = []
for i in range(10):
    thread = threading.Thread(target=test_threadsafe)
    thread.start()
    threads.append(thread)

for thread in threads:
    thread.join()
