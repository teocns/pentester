import os


BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

DEBUG = os.getenv("DEBUG", True)

CI = os.getenv("CI", False)  # Are we in CI pipelines?

REDIS_HOST = os.getenv("REDIS_HOST", "redis")

RABBITMQ_HOST = os.getenv("RABBITMQ_HOST", "rabbitmq")

MSFRPC_HOST = os.getenv("MSFRPC_HOST", "127.0.0.1")
#MSFRPC_HOST = os.getenv("MSFRPC_HOST", "13.37.249.152")

MSFRPC_PW = os.getenv("MSFRPC_PW", "pentest_tool")


# CONFIGURE LOGGER

import logging

def config_log():

    class CustomFormatter(logging.Formatter):

        grey = "\x1b[38;20m"
        yellow = "\x1b[33;20m"
        red = "\x1b[31;20m"
        bold_red = "\x1b[31;1m"
        reset = "\x1b[0m"
        lightblue = "\x1b[38;5;111m"
        format = "%(asctime)s - %(name)s - %(levelname)s - %(message)s (%(filename)s:%(lineno)d)"

        FORMATS = {
            logging.DEBUG: grey + format + reset,
            logging.INFO: lightblue + format + reset,
            logging.WARNING: yellow + format + reset,
            logging.ERROR: red + format + reset,
            logging.CRITICAL: bold_red + format + reset
        }

        def format(self, record):
            log_fmt = self.FORMATS.get(record.levelno)
            formatter = logging.Formatter(log_fmt)
            return formatter.format(record)


    streamHandler = logging.StreamHandler()
    streamHandler.setFormatter(CustomFormatter())
    logging.basicConfig(
        level=logging.DEBUG if DEBUG else logging.INFO,
        format="[%(asctime)s] - %(name)s:%(lineno)d - %(levelname)s - %(message)s",
        datefmt="%m-%d %H:%M",
        handlers=[streamHandler]
    )
config_log()
# logging.basicConfig(level=logging.DEBUG if DEBUG else logging.INFO)


####################
# METASPLOIT CONFIG
####################
MSF_CONSOLE_POOL_SIZE = os.getenv("MSF_CONSOLE_POOL_SIZE", 10)
